@use "sass:map";
@use "../utils";

$background-elevation-levels: (
  default: 0%,
  surface: 0%,
  1: 5%,
  2: 7%,
  3: 8%,
  4: 9%,
  5: 11%,
  6: 12%,
  7: 14%,
  8: 15%,
  9: 16%,
);

$shadow-elevation-level: (
  default: (
    0px 4px 4px rgba(0, 0, 0, 0.25),
  ),
  surface: (
    0px 4px 4px rgba(0, 0, 0, 0.25),
  ),
  1: (
    0px 0.3px 0.9px rgba(0, 0, 0, 0.1),
    0px 1.6px 3.6px rgba(0, 0, 0, 0.13),
  ),
  2: (
    0px 0.6px 1.8px rgba(0, 0, 0, 0.1),
    0px 3.2px 7.2px rgba(0, 0, 0, 0.13),
  ),
  3: (
    0px 1.2px 3.6px rgba(0, 0, 0, 0.1),
    0px 6.4px 14.4px rgba(0, 0, 0, 0.13),
  ),
  4: (
    0px 4.8px 14.4px rgba(0, 0, 0, 0.18),
    0px 25.6px 57.6px rgba(0, 0, 0, 0.22),
  ),
);

$overlay: #fff;

// Generate background elevation levels
// for a surface color
@function generate-elevation-levels($surface) {
  $levels: ();

  @each $level, $opacity in $background-elevation-levels {
    $elevation: mix($overlay, $surface, $opacity);
    $levels: map.merge($levels, (#{$level}: $elevation));
  }

  @return $levels;
}

// Apply background elevation to a container
@mixin background-elevation($theme, $level: default) {
  // We need to convert the level to a string
  // in order to index the map even if the key
  // is a number.
  $level: utils.to-string($level);
  $elevation: map.get($theme, elevation);

  background-color: map.get($elevation, $level);
  box-shadow: map.get($shadow-elevation-level, $level);
}

// Creating global background elevation classes
@mixin apply-background-elevation-classes($theme) {
  $elevation: map.get($theme, elevation);

  @each $level, $percent in $elevation {
    .fx-elevation-#{$level} {
      @include background-elevation($theme, $level);
    }
  }
}

// Creating global text elevation classes
@mixin apply-text-elevation-classes($theme) {
  $text-config: map.get($theme, text);
  $palette: map.get($theme, palette);

  $on-surface-color: map.get($text-config, on-surface);
  $on-primary-color: map.get($text-config, on-primary);

  $text-palette: map.get($palette, text);
  $on-surface-palette: map.get($text-palette, on-surface);
  $on-primary-palette: map.get($text-palette, on-primary);

  @each $level, $color in $on-primary-palette {
    .fx-on-primary-#{$level} {
      color: $color;
    }
  }

  @each $level, $color in $on-surface-palette {
    .fx-on-surface-#{$level} {
      color: $color;
    }
  }
}
